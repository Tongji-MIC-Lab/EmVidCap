name: "s2vt:features_to_lstm"

input: "frames_fc7"
input_shape {
  dim: 1
  dim: 2048
}

input: "cont_sentence"
input_shape {
  dim: 1
  dim: 1
}

input: "input_sentence"
input_shape {
  dim: 1
  dim: 1
}

input: "stage_indicator"
input_shape {
  dim: 1
  dim: 1
}

# sentence generation layers
layer {
  name: "embed_encoder"
  type: "InnerProduct"
  bottom: "frames_fc7"
  top: "embedded_in_frames"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}

layer {
  name: "reshape_frames"
  type: "Reshape"
  bottom: "embedded_in_frames"
  top: "embedded_input_frames"
  reshape_param {
    shape {
      dim: 1
      dim: 1
      dim: 500
    }
  }
}
layer {
  name: "reshape_stage_indicator"
  type: "Reshape"
  bottom: "stage_indicator"
  top: "reshaped_stage_indicator"
  reshape_param {
    shape {
      dim: 1
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "embedding"
  type: "Embed"
  bottom: "input_sentence"
  top: "embedded_input_sentence"
  param {
    lr_mult: 1
  }
  embed_param {
    bias_term: false
    input_dim: 46168 #youtube_vocab+1
    num_output: 500
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layer {
  name: "lstm1"
  type: "LSTM"
  bottom: "embedded_input_sentence"
  bottom: "cont_sentence"
  top: "lstm1"
  recurrent_param {
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "concat"
  type: "Concat"
  concat_param { concat_dim: 2 } # concat along h
  bottom: "lstm1"
  bottom: "embedded_input_frames"
  bottom: "reshaped_stage_indicator"
  top: "lstm1_video_sequence"
}
layer {
  name: "lstm2"
  type: "LSTM"
  bottom: "lstm1_video_sequence"
  bottom: "cont_sentence"
  top: "lstm2"
  recurrent_param {
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

########################################

layer {
  name: "elt1"
  type: "Eltwise"
  top: "elt1"
  bottom: "lstm1"
  bottom: "lstm2"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "lstm3"
  type: "LSTM"
  #bottom: "embedded_input_frames"
  bottom: "elt1"
  bottom: "cont_sentence"
  top: "lstm3"
 
  recurrent_param {
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "elt2"
  type: "Eltwise"
  top: "elt2"
  bottom: "lstm2"
  bottom: "lstm3"
  eltwise_param {
    operation: SUM
  }
}

layer {
  name: "concat2"
  type: "Concat"
  concat_param { concat_dim: 2 } # concat along h
  bottom: "elt2"
  #bottom: "embedded_input_sentence"
  bottom: "embedded_input_frames"
  bottom: "reshaped_stage_indicator"
  top: "lstm2_video_sequence" 
}


layer {
  name: "lstm4"
  type: "LSTM"
  bottom: "lstm2_video_sequence"
  bottom: "cont_sentence"
  top: "lstm4"

  recurrent_param {
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "elt3"
  type: "Eltwise"
  top: "elt3"
  bottom: "lstm3"
  bottom: "lstm4"
  eltwise_param {
    operation: SUM
  }
}

########################################

layer {
  name: "predict"
  type: "InnerProduct"
  bottom: "elt3"
  top: "predict"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
   inner_product_param {
    num_output: 46168 # youtube_vocab + 1
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}

# loss layers
layer {
  name: "probs"
  type: "Softmax"
  bottom: "predict"
  top: "probs"
  softmax_param {
    axis: 2
  }
}
